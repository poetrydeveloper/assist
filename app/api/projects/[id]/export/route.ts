// app/api/projects/[id]/export/route.ts
import { NextRequest, NextResponse } from 'next/server'
import { prisma } from '@/lib/prisma'

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const { id } = await params
    
    const project = await prisma.project.findUnique({
      where: { id },
      include: {
        steps: {
          orderBy: { createdAt: 'asc' }
        }
      }
    })

    if (!project) {
      return NextResponse.json(
        { error: 'Project not found' },
        { status: 404 }
      )
    }

    const sqlContent = generateSQL(project)

    return new NextResponse(sqlContent, {
      headers: {
        'Content-Type': 'application/sql',
        'Content-Disposition': `attachment; filename="project-${project.id}.sql"`,
      },
    })
  } catch (error) {
    return NextResponse.json(
      { error: 'Failed to export project' },
      { status: 500 }
    )
  }
}

function generateSQL(project: any): string {
  const timestamp = new Date().toISOString()
  let sql = `-- Learning Tracker Export\n`
  sql += `-- Project: ${project.title}\n`
  sql += `-- Export Date: ${timestamp}\n`
  sql += `-- Total Steps: ${project.steps.length}\n\n`

  // –î–û–ë–ê–í–õ–Ø–ï–ú –ü–†–û–ú–¢ –î–õ–Ø –ò–ò
  sql += generateAIPrompt(project)
  sql += `\n\n`

  // –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
  sql += `-- Project data\n`
  sql += `INSERT INTO projects (id, createdAt, updatedAt, title, description, goal) VALUES (\n`
  sql += `  '${project.id}',\n`
  sql += `  '${project.createdAt.toISOString()}',\n`
  sql += `  '${project.updatedAt.toISOString()}',\n`
  sql += `  '${escapeSQL(project.title)}',\n`
  sql += `  ${project.description ? `'${escapeSQL(project.description)}'` : 'NULL'},\n`
  sql += `  '${escapeSQL(project.goal)}'\n`
  sql += `);\n\n`

  // –í—Å—Ç–∞–≤–∫–∞ —à–∞–≥–æ–≤
  if (project.steps.length > 0) {
    sql += `-- Steps data\n`
    project.steps.forEach((step: any, index: number) => {
      sql += `INSERT INTO steps (id, createdAt, projectId, content, aiResponse, type) VALUES (\n`
      sql += `  '${step.id}',\n`
      sql += `  '${step.createdAt.toISOString()}',\n`
      sql += `  '${step.projectId}',\n`
      sql += `  '${escapeSQL(step.content)}',\n`
      sql += `  ${step.aiResponse ? `'${escapeSQL(step.aiResponse)}'` : 'NULL'},\n`
      sql += `  ${step.type ? `'${escapeSQL(step.type)}'` : 'NULL'}\n`
      sql += `)${index === project.steps.length - 1 ? ';' : ';'}\n`
    })
  }

  return sql
}

function generateAIPrompt(project: any): string {
  return `-- üéØ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –ò–ò-–ü–û–ú–û–©–ù–ò–ö–ê (DeepSeek/ChatGPT)
--
-- –¶–ï–õ–¨: –¢—ã - –æ–ø—ã—Ç–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –≤ –æ–±—É—á–µ–Ω–∏–∏ –∏ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ.
-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ–¥–µ—Ç —ç—Ç–æ—Ç —É—á–µ–±–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏ —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
--
-- –ß–¢–û –ù–£–ñ–ù–û –î–ï–õ–ê–¢–¨:
--
-- 1. üìä –ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–£–ô –ü–†–û–ï–ö–¢:
--    - –ò–∑—É—á–∏ —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞: "${project.goal}"
--    - –ü–æ–π–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${project.description || '–±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è'}
--    - –û—Ü–µ–Ω–∏ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å (${project.steps.length} —à–∞–≥–æ–≤)
--
-- 2. üîç –ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–£–ô –ö–ê–ñ–î–´–ô –®–ê–ì:
--    - –û—Ü–µ–Ω–∏ —á—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ –≤ –∫–∞–∂–¥–æ–º —à–∞–≥–µ
--    - –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è –ø–æ —Ç–µ–º–µ - –¥–∞–π —ç–∫—Å–ø–µ—Ä—Ç–Ω—É—é –æ—Ü–µ–Ω–∫—É
--    - –û—Ç–º–µ—Ç—å —á—Ç–æ —Å–¥–µ–ª–∞–Ω–æ —Ö–æ—Ä–æ—à–æ, –∞ —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
--
-- 3. ‚ùì –ó–ê–î–ê–ô –£–¢–û–ß–ù–Ø–Æ–©–ò–ï –í–û–ü–†–û–°–´:
--    - "–í—Å–µ –ª–∏ –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ –≤ —ç—Ç–æ–º —à–∞–≥–µ?"
--    - "–ö–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –≤–æ–∑–Ω–∏–∫–ª–∏?"
--    - "–ù—É–∂–Ω—ã –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è?"
--
-- 4. üéÅ –ü–†–ï–î–õ–û–ñ–ò –ü–û–ú–û–©–¨:
--    - –®–ø–∞—Ä–≥–∞–ª–∫–∏ –∏ –∫—Ä–∞—Ç–∫–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞
--    - –†–µ—à–µ–Ω–∏—è —Ç–∏–ø–æ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º
--    - –°–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —à–∞–≥–∏
--    - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
--
-- 5. üí° –î–ê–ô –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
--    - –ß—Ç–æ –∏–∑—É—á–∞—Ç—å –¥–∞–ª—å—à–µ (–ª–æ–≥–∏—á–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
--    - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
--    - –°–æ–≤–µ—Ç—ã –ø–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é
--
-- –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
-- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç:
-- - –ö—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
-- - –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
-- - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–∞–º
-- - –®–ø–∞—Ä–≥–∞–ª–∫–∏/—Å–æ–≤–µ—Ç—ã –ø–æ —Ç–µ–º–µ
-- - –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
--
-- –ü–û–°–õ–ï –¢–í–û–ï–ì–û –û–¢–í–ï–¢–ê –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç:
-- 1. –ó–∞–¥–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
-- 2. –ü–æ–ø—Ä–æ—Å–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç—å —à–ø–∞—Ä–≥–∞–ª–∫—É
-- 3. –î–æ–±–∞–≤–∏—Ç—å —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –∫–∞–∫ AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —à–∞–≥—É
--
-- üîΩ –ù–ò–ñ–ï –î–ê–ù–ù–´–ï –ü–†–û–ï–ö–¢–ê –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê üîΩ
`
}

function escapeSQL(str: string): string {
  return str.replace(/'/g, "''").replace(/\n/g, '\\n')
}