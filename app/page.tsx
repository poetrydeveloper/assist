// app/page.tsx
'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'

interface Project {
  id: string
  title: string
  description: string | null
  goal: string
  createdAt: string
  updatedAt: string
  steps: Step[]
}

interface Step {
  id: string
  content: string
  type: string | null
  createdAt: string
}

export default function Home() {
  const [projects, setProjects] = useState<Project[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const router = useRouter()

  useEffect(() => {
    fetchProjects()
  }, [])

  const fetchProjects = async () => {
    try {
      setError(null)
      const response = await fetch('/api/projects')
      
      if (!response.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã')
      }
      
      const data = await response.json()
      setProjects(data)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    } finally {
      setLoading(false)
    }
  }

  const handleCreateProject = () => {
    router.push('/projects/new')
  }

  const handleViewProject = (projectId: string) => {
    router.push(`/projects/${projectId}`)
  }

  const handleExportProject = (projectId: string) => {
    window.open(`/api/projects/${projectId}/export`, '_blank')
  }

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })
  }

  if (loading) {
    return (
      <main className="min-h-screen bg-gray-50 p-8">
        <div className="max-w-6xl mx-auto">
          <div className="text-center py-12">
            <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
            <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...</p>
          </div>
        </div>
      </main>
    )
  }

  return (
    <main className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-6xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            –¢—Ä–µ–∫–µ—Ä –û–±—É—á–µ–Ω–∏—è üéØ
          </h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –æ–±—É—á–µ–Ω–∏—è, —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è AI-–∏–Ω—Å–∞–π—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
          </p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-2xl font-bold text-blue-600 mb-2">{projects.length}</div>
            <div className="text-gray-600">–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤</div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-2xl font-bold text-green-600 mb-2">
              {projects.reduce((total, project) => total + project.steps.length, 0)}
            </div>
            <div className="text-gray-600">–í—Å–µ–≥–æ —à–∞–≥–æ–≤</div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-2xl font-bold text-purple-600 mb-2">
              {projects.filter(p => p.steps.length > 0).length}
            </div>
            <div className="text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</div>
          </div>
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="flex justify-between items-center mb-8">
          <button 
            onClick={handleCreateProject}
            className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center gap-2"
          >
            <span>+</span>
            –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
          </button>
          
          {projects.length > 0 && (
            <button 
              onClick={fetchProjects}
              className="text-gray-600 hover:text-gray-800 px-4 py-2 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors"
            >
              –û–±–Ω–æ–≤–∏—Ç—å
            </button>
          )}
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
        {error && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <div className="flex items-center gap-2 text-red-800">
              <span>‚ö†Ô∏è</span>
              <span>{error}</span>
            </div>
            <button 
              onClick={fetchProjects}
              className="mt-2 text-red-600 hover:text-red-800 text-sm font-medium"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        )}

        {/* –°–µ—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
        {projects.length > 0 ? (
          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
            {projects.map((project) => (
              <div 
                key={project.id} 
                className="bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-shadow"
              >
                <div className="p-6">
                  <div className="flex justify-between items-start mb-3">
                    <h3 className="text-xl font-semibold text-gray-900 line-clamp-2">
                      {project.title}
                    </h3>
                    <span className="flex-shrink-0 bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full ml-2">
                      {project.steps.length} —à–∞–≥–æ–≤
                    </span>
                  </div>
                  
                  {project.description && (
                    <p className="text-gray-600 mb-4 line-clamp-3">
                      {project.description}
                    </p>
                  )}
                  
                  <div className="mb-4">
                    <div className="text-sm font-medium text-gray-700 mb-1">–¶–µ–ª—å:</div>
                    <p className="text-sm text-gray-600 line-clamp-2">{project.goal}</p>
                  </div>

                  <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
                    <span>–°–æ–∑–¥–∞–Ω: {formatDate(project.createdAt)}</span>
                    {project.updatedAt !== project.createdAt && (
                      <span>–û–±–Ω–æ–≤–ª–µ–Ω: {formatDate(project.updatedAt)}</span>
                    )}
                  </div>

                  <div className="flex gap-2">
                    <button 
                      onClick={() => handleViewProject(project.id)}
                      className="flex-1 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors"
                    >
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button 
                      onClick={() => handleExportProject(project.id)}
                      className="flex-1 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors"
                      title="–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å SQL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ò–ò"
                    >
                      –≠–∫—Å–ø–æ—Ä—Ç SQL
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ */
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-12 text-center">
            <div className="text-6xl mb-4">üéØ</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              –ü–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
            </h3>
            <p className="text-gray-600 mb-6 max-w-md mx-auto">
              –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –æ–±—É—á–µ–Ω–∏—è, —Å–æ–∑–¥–∞–≤ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø–æ–ª—É—á–∞–π—Ç–µ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
            </p>
            <button 
              onClick={handleCreateProject}
              className="bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors"
            >
              –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç
            </button>
          </div>
        )}

        {/* –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç */}
        {projects.length === 0 && (
          <div className="mt-12 grid md:grid-cols-3 gap-8">
            <div className="text-center">
              <div className="text-2xl mb-3">üìù</div>
              <h4 className="font-semibold mb-2">–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç—ã</h4>
              <p className="text-gray-600 text-sm">
                –û–ø—Ä–µ–¥–µ–ª—è–π—Ç–µ —Ü–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —à–∞–≥–æ–≤.
              </p>
            </div>
            <div className="text-center">
              <div className="text-2xl mb-3">üìä</div>
              <h4 className="font-semibold mb-2">–§–∏–∫—Å–∏—Ä—É–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å</h4>
              <p className="text-gray-600 text-sm">
                –î–æ–±–∞–≤–ª—è–π—Ç–µ –∑–∞–º–µ—Ç–∫–∏, —É—Ä–æ–∫–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –º–µ—Ä–µ –æ–±—É—á–µ–Ω–∏—è –∏ —Ä–æ—Å—Ç–∞.
              </p>
            </div>
            <div className="text-center">
              <div className="text-2xl mb-3">ü§ñ</div>
              <h4 className="font-semibold mb-2">AI-–∏–Ω—Å–∞–π—Ç—ã</h4>
              <p className="text-gray-600 text-sm">
                –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –ò–ò.
              </p>
            </div>
          </div>
        )}
      </div>
    </main>
  )
}