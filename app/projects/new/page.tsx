// app/projects/new/page.tsx
'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'

export default function NewProject() {
  const router = useRouter()
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    goal: ''
  })
  const [loading, setLoading] = useState(false)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)

    try {
      const response = await fetch('/api/projects', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      })

      if (response.ok) {
        const project = await response.json()
        router.push('/') // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞')
      }
    } catch (error) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç:', error)
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç')
    } finally {
      setLoading(false)
    }
  }

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }))
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-2xl mx-auto px-4">
        <button 
          onClick={() => router.back()}
          className="flex items-center gap-2 text-gray-600 hover:text-gray-800 mb-6"
        >
          <span>‚Üê</span>
          –ù–∞–∑–∞–¥
        </button>
        
        <h1 className="text-3xl font-bold mb-8">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç</h1>
        
        <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg shadow-md">
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ *
            </label>
            <input
              type="text"
              name="title"
              value={formData.title}
              onChange={handleChange}
              required
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–∑—É—á–µ–Ω–∏–µ Next.js, –ö—É—Ä—Å –ø–æ Unity..."
            />
          </div>

          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={3}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."
            />
          </div>

          <div className="mb-6">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¶–µ–ª—å –æ–±—É—á–µ–Ω–∏—è *
            </label>
            <input
              type="text"
              name="goal"
              value={formData.goal}
              onChange={handleChange}
              required
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ç–æ—Ç–∏–ø –∏–≥—Ä—ã..."
            />
            <p className="text-sm text-gray-500 mt-1">
              –ß–µ—Ç–∫–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ, —á–µ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å –≤ —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ
            </p>
          </div>

          <div className="flex gap-4">
            <button
              type="submit"
              disabled={loading}
              className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-md font-semibold disabled:opacity-50 transition-colors"
            >
              {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç'}
            </button>
            
            <button
              type="button"
              onClick={() => router.back()}
              className="bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-md font-semibold transition-colors"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </form>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
        <div className="mt-8 grid md:grid-cols-2 gap-6">
          <div className="bg-blue-50 p-4 rounded-lg">
            <h3 className="font-semibold text-blue-900 mb-2">üí° –ü—Ä–∏–º–µ—Ä—ã —Ü–µ–ª–µ–π</h3>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –û—Å–≤–æ–∏—Ç—å –æ—Å–Ω–æ–≤—ã React –∑–∞ 2 –Ω–µ–¥–µ–ª–∏</li>
              <li>‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É –Ω–∞ Unity –∑–∞ –º–µ—Å—è—Ü</li>
              <li>‚Ä¢ –ò–∑—É—á–∏—Ç—å Python –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö</li>
            </ul>
          </div>
          
          <div className="bg-green-50 p-4 rounded-lg">
            <h3 className="font-semibold text-green-900 mb-2">üéØ –°–æ–≤–µ—Ç—ã</h3>
            <ul className="text-sm text-green-800 space-y-1">
              <li>‚Ä¢ –°—Ç–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–∑–º–µ—Ä–∏–º—ã–µ —Ü–µ–ª–∏</li>
              <li>‚Ä¢ –†–∞–∑–±–∏–≤–∞–π—Ç–µ –±–æ–ª—å—à–∏–µ —Ü–µ–ª–∏ –Ω–∞ —ç—Ç–∞–ø—ã</li>
              <li>‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è–π—Ç–µ —à–∞–≥–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  )
}